version: "3"
services:
  sonarr:
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}      
      - TZ=${TZ}
    volumes:
      - ${APPDATA}sonarr:/config
      - ${GMEDIA_TV}
      - ${DOWNLOAD}
    ports:
      - 8989:8989
      
  radarr:
    image: ghcr.io/linuxserver/radarr:nightly
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}radarr:/config
      - ${GMEDIA_MOVIE}
      - ${DOWNLOAD}
    ports:
      - 7878:7878

  transmission_openvpn:
    image: haugene/transmission-openvpn
    cap_add:
      - NET_ADMIN
    container_name: transmission_openvpn
    restart: unless-stopped
    dns:
      - 8.8.8.8  # Using google dns
      - 8.8.4.4 
    volumes:
      - ${APPDATA}transmission:/data  # Transmission-openvpn data folder where config and stuff defaults 
      - ${DOWNLOAD}
      - ${WATCH}
      - ${APPDATA}transmission/scripts:/scripts  # In case you want to plug into any of the image hooks
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - LOCAL_NETWORK=192.168.1.0/24
      - OPENVPN_CONFIG=${OPENVPN_CONFIG}
      - OPENVPN_USERNAME=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASS}
      - OPENVPN_PROVIDER=${OPENVPN_PROVIDER}
      - TRANSMISSION_DOWNLOAD_DIR=/download/complete  # Make sure this corresponds to the ${DOWNLOAD} volume
      - TRANSMISSION_INCOMPLETE_DIR=/download/incomplete  # Make sure this corresponds to the ${DOWNLOAD} volume
      - TRANSMISSION_WATCH_DIR=/watch  # Make sure this corresponds to the ${WATCH} volume
      - TRANSMISSION_WEB_UI=flood-for-transmission
      - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_USER}
      - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_PASS}
      - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - '9091:9091'

  overseerr:
    image: ghcr.io/linuxserver/overseerr
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
      
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    restart: unless-stopped
    environment:
      - PUID=${USVC}
      - PGID=${GSVC}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ${APPDATA}jackett:/config
    ports:
      - 9117:9117
      
  tautulli:
    image: ghcr.io/linuxserver/tautulli
    container_name: tautulli
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${APPDATA}tautulli:/config
    ports:
      - 8181:8181
      
  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${APPDATA}plex:/config
      - ${GMEDIA}
      
  wireguard:
    image: ghcr.io/linuxserver/wireguard
    container_name: wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - SERVERURL=auto
      - SERVERPORT=51820
      - PEERS=${WIREGUARD_PEERS}
      - PEERDNS=8.8.8.8  # Google dns
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=0.0.0.0/0
    volumes:
      - ${APPDATA}wireguard:/config
      - /lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

  nginx_proxy_manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: nginx_proxy_manager
    restart: unless-stopped
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # Admin Web Port:
      - '81:81'
    environment:
      # These are the settings to access your db
      DB_SQLITE_FILE: "/data/database.sqlite"
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
    volumes:
      - ${APPDATA}nginx_proxy_manager/data:/data
      - ${APPDATA}nginx_proxy_manager/letsencrypt:/etc/letsencrypt

  watchtower:
      image: containrrr/watchtower
      container_name: watchtower
      volumes:
         - /var/run/docker.sock:/var/run/docker.sock
        
  portainer:
    image: portainer/portainer
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

volumes:
  portainer_data:
